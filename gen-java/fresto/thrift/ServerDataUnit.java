/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package fresto.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ServerDataUnit implements org.apache.thrift.TBase<ServerDataUnit, ServerDataUnit._Fields>, java.io.Serializable, Cloneable, Comparable<ServerDataUnit> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ServerDataUnit");

  private static final org.apache.thrift.protocol.TField HOST_APP_CONTEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("host_app_context", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField APP_RESOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("app_resource", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField RESOURCE_IMPLEMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_implement", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField ENTRY_INVOKE_FIELD_DESC = new org.apache.thrift.protocol.TField("entry_invoke", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField ENTRY_RETURN_FIELD_DESC = new org.apache.thrift.protocol.TField("entry_return", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField METHOD_INVOKE_FIELD_DESC = new org.apache.thrift.protocol.TField("method_invoke", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField METHOD_RETURN_FIELD_DESC = new org.apache.thrift.protocol.TField("method_return", org.apache.thrift.protocol.TType.STRUCT, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ServerDataUnitStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ServerDataUnitTupleSchemeFactory());
  }

  public HostAppContextEdge host_app_context; // required
  public AppResourceEdge app_resource; // required
  public ResourceImplEdge resource_implement; // required
  public EntryInvokeProperty entry_invoke; // required
  public EntryReturnProperty entry_return; // required
  public MethodInvokeProperty method_invoke; // required
  public MethodReturnProperty method_return; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HOST_APP_CONTEXT((short)1, "host_app_context"),
    APP_RESOURCE((short)2, "app_resource"),
    RESOURCE_IMPLEMENT((short)3, "resource_implement"),
    ENTRY_INVOKE((short)4, "entry_invoke"),
    ENTRY_RETURN((short)5, "entry_return"),
    METHOD_INVOKE((short)6, "method_invoke"),
    METHOD_RETURN((short)7, "method_return");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // HOST_APP_CONTEXT
          return HOST_APP_CONTEXT;
        case 2: // APP_RESOURCE
          return APP_RESOURCE;
        case 3: // RESOURCE_IMPLEMENT
          return RESOURCE_IMPLEMENT;
        case 4: // ENTRY_INVOKE
          return ENTRY_INVOKE;
        case 5: // ENTRY_RETURN
          return ENTRY_RETURN;
        case 6: // METHOD_INVOKE
          return METHOD_INVOKE;
        case 7: // METHOD_RETURN
          return METHOD_RETURN;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HOST_APP_CONTEXT, new org.apache.thrift.meta_data.FieldMetaData("host_app_context", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, HostAppContextEdge.class)));
    tmpMap.put(_Fields.APP_RESOURCE, new org.apache.thrift.meta_data.FieldMetaData("app_resource", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AppResourceEdge.class)));
    tmpMap.put(_Fields.RESOURCE_IMPLEMENT, new org.apache.thrift.meta_data.FieldMetaData("resource_implement", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ResourceImplEdge.class)));
    tmpMap.put(_Fields.ENTRY_INVOKE, new org.apache.thrift.meta_data.FieldMetaData("entry_invoke", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EntryInvokeProperty.class)));
    tmpMap.put(_Fields.ENTRY_RETURN, new org.apache.thrift.meta_data.FieldMetaData("entry_return", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EntryReturnProperty.class)));
    tmpMap.put(_Fields.METHOD_INVOKE, new org.apache.thrift.meta_data.FieldMetaData("method_invoke", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MethodInvokeProperty.class)));
    tmpMap.put(_Fields.METHOD_RETURN, new org.apache.thrift.meta_data.FieldMetaData("method_return", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MethodReturnProperty.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ServerDataUnit.class, metaDataMap);
  }

  public ServerDataUnit() {
  }

  public ServerDataUnit(
    HostAppContextEdge host_app_context,
    AppResourceEdge app_resource,
    ResourceImplEdge resource_implement,
    EntryInvokeProperty entry_invoke,
    EntryReturnProperty entry_return,
    MethodInvokeProperty method_invoke,
    MethodReturnProperty method_return)
  {
    this();
    this.host_app_context = host_app_context;
    this.app_resource = app_resource;
    this.resource_implement = resource_implement;
    this.entry_invoke = entry_invoke;
    this.entry_return = entry_return;
    this.method_invoke = method_invoke;
    this.method_return = method_return;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ServerDataUnit(ServerDataUnit other) {
    if (other.isSetHost_app_context()) {
      this.host_app_context = new HostAppContextEdge(other.host_app_context);
    }
    if (other.isSetApp_resource()) {
      this.app_resource = new AppResourceEdge(other.app_resource);
    }
    if (other.isSetResource_implement()) {
      this.resource_implement = new ResourceImplEdge(other.resource_implement);
    }
    if (other.isSetEntry_invoke()) {
      this.entry_invoke = new EntryInvokeProperty(other.entry_invoke);
    }
    if (other.isSetEntry_return()) {
      this.entry_return = new EntryReturnProperty(other.entry_return);
    }
    if (other.isSetMethod_invoke()) {
      this.method_invoke = new MethodInvokeProperty(other.method_invoke);
    }
    if (other.isSetMethod_return()) {
      this.method_return = new MethodReturnProperty(other.method_return);
    }
  }

  public ServerDataUnit deepCopy() {
    return new ServerDataUnit(this);
  }

  @Override
  public void clear() {
    this.host_app_context = null;
    this.app_resource = null;
    this.resource_implement = null;
    this.entry_invoke = null;
    this.entry_return = null;
    this.method_invoke = null;
    this.method_return = null;
  }

  public HostAppContextEdge getHost_app_context() {
    return this.host_app_context;
  }

  public ServerDataUnit setHost_app_context(HostAppContextEdge host_app_context) {
    this.host_app_context = host_app_context;
    return this;
  }

  public void unsetHost_app_context() {
    this.host_app_context = null;
  }

  /** Returns true if field host_app_context is set (has been assigned a value) and false otherwise */
  public boolean isSetHost_app_context() {
    return this.host_app_context != null;
  }

  public void setHost_app_contextIsSet(boolean value) {
    if (!value) {
      this.host_app_context = null;
    }
  }

  public AppResourceEdge getApp_resource() {
    return this.app_resource;
  }

  public ServerDataUnit setApp_resource(AppResourceEdge app_resource) {
    this.app_resource = app_resource;
    return this;
  }

  public void unsetApp_resource() {
    this.app_resource = null;
  }

  /** Returns true if field app_resource is set (has been assigned a value) and false otherwise */
  public boolean isSetApp_resource() {
    return this.app_resource != null;
  }

  public void setApp_resourceIsSet(boolean value) {
    if (!value) {
      this.app_resource = null;
    }
  }

  public ResourceImplEdge getResource_implement() {
    return this.resource_implement;
  }

  public ServerDataUnit setResource_implement(ResourceImplEdge resource_implement) {
    this.resource_implement = resource_implement;
    return this;
  }

  public void unsetResource_implement() {
    this.resource_implement = null;
  }

  /** Returns true if field resource_implement is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_implement() {
    return this.resource_implement != null;
  }

  public void setResource_implementIsSet(boolean value) {
    if (!value) {
      this.resource_implement = null;
    }
  }

  public EntryInvokeProperty getEntry_invoke() {
    return this.entry_invoke;
  }

  public ServerDataUnit setEntry_invoke(EntryInvokeProperty entry_invoke) {
    this.entry_invoke = entry_invoke;
    return this;
  }

  public void unsetEntry_invoke() {
    this.entry_invoke = null;
  }

  /** Returns true if field entry_invoke is set (has been assigned a value) and false otherwise */
  public boolean isSetEntry_invoke() {
    return this.entry_invoke != null;
  }

  public void setEntry_invokeIsSet(boolean value) {
    if (!value) {
      this.entry_invoke = null;
    }
  }

  public EntryReturnProperty getEntry_return() {
    return this.entry_return;
  }

  public ServerDataUnit setEntry_return(EntryReturnProperty entry_return) {
    this.entry_return = entry_return;
    return this;
  }

  public void unsetEntry_return() {
    this.entry_return = null;
  }

  /** Returns true if field entry_return is set (has been assigned a value) and false otherwise */
  public boolean isSetEntry_return() {
    return this.entry_return != null;
  }

  public void setEntry_returnIsSet(boolean value) {
    if (!value) {
      this.entry_return = null;
    }
  }

  public MethodInvokeProperty getMethod_invoke() {
    return this.method_invoke;
  }

  public ServerDataUnit setMethod_invoke(MethodInvokeProperty method_invoke) {
    this.method_invoke = method_invoke;
    return this;
  }

  public void unsetMethod_invoke() {
    this.method_invoke = null;
  }

  /** Returns true if field method_invoke is set (has been assigned a value) and false otherwise */
  public boolean isSetMethod_invoke() {
    return this.method_invoke != null;
  }

  public void setMethod_invokeIsSet(boolean value) {
    if (!value) {
      this.method_invoke = null;
    }
  }

  public MethodReturnProperty getMethod_return() {
    return this.method_return;
  }

  public ServerDataUnit setMethod_return(MethodReturnProperty method_return) {
    this.method_return = method_return;
    return this;
  }

  public void unsetMethod_return() {
    this.method_return = null;
  }

  /** Returns true if field method_return is set (has been assigned a value) and false otherwise */
  public boolean isSetMethod_return() {
    return this.method_return != null;
  }

  public void setMethod_returnIsSet(boolean value) {
    if (!value) {
      this.method_return = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case HOST_APP_CONTEXT:
      if (value == null) {
        unsetHost_app_context();
      } else {
        setHost_app_context((HostAppContextEdge)value);
      }
      break;

    case APP_RESOURCE:
      if (value == null) {
        unsetApp_resource();
      } else {
        setApp_resource((AppResourceEdge)value);
      }
      break;

    case RESOURCE_IMPLEMENT:
      if (value == null) {
        unsetResource_implement();
      } else {
        setResource_implement((ResourceImplEdge)value);
      }
      break;

    case ENTRY_INVOKE:
      if (value == null) {
        unsetEntry_invoke();
      } else {
        setEntry_invoke((EntryInvokeProperty)value);
      }
      break;

    case ENTRY_RETURN:
      if (value == null) {
        unsetEntry_return();
      } else {
        setEntry_return((EntryReturnProperty)value);
      }
      break;

    case METHOD_INVOKE:
      if (value == null) {
        unsetMethod_invoke();
      } else {
        setMethod_invoke((MethodInvokeProperty)value);
      }
      break;

    case METHOD_RETURN:
      if (value == null) {
        unsetMethod_return();
      } else {
        setMethod_return((MethodReturnProperty)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case HOST_APP_CONTEXT:
      return getHost_app_context();

    case APP_RESOURCE:
      return getApp_resource();

    case RESOURCE_IMPLEMENT:
      return getResource_implement();

    case ENTRY_INVOKE:
      return getEntry_invoke();

    case ENTRY_RETURN:
      return getEntry_return();

    case METHOD_INVOKE:
      return getMethod_invoke();

    case METHOD_RETURN:
      return getMethod_return();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case HOST_APP_CONTEXT:
      return isSetHost_app_context();
    case APP_RESOURCE:
      return isSetApp_resource();
    case RESOURCE_IMPLEMENT:
      return isSetResource_implement();
    case ENTRY_INVOKE:
      return isSetEntry_invoke();
    case ENTRY_RETURN:
      return isSetEntry_return();
    case METHOD_INVOKE:
      return isSetMethod_invoke();
    case METHOD_RETURN:
      return isSetMethod_return();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ServerDataUnit)
      return this.equals((ServerDataUnit)that);
    return false;
  }

  public boolean equals(ServerDataUnit that) {
    if (that == null)
      return false;

    boolean this_present_host_app_context = true && this.isSetHost_app_context();
    boolean that_present_host_app_context = true && that.isSetHost_app_context();
    if (this_present_host_app_context || that_present_host_app_context) {
      if (!(this_present_host_app_context && that_present_host_app_context))
        return false;
      if (!this.host_app_context.equals(that.host_app_context))
        return false;
    }

    boolean this_present_app_resource = true && this.isSetApp_resource();
    boolean that_present_app_resource = true && that.isSetApp_resource();
    if (this_present_app_resource || that_present_app_resource) {
      if (!(this_present_app_resource && that_present_app_resource))
        return false;
      if (!this.app_resource.equals(that.app_resource))
        return false;
    }

    boolean this_present_resource_implement = true && this.isSetResource_implement();
    boolean that_present_resource_implement = true && that.isSetResource_implement();
    if (this_present_resource_implement || that_present_resource_implement) {
      if (!(this_present_resource_implement && that_present_resource_implement))
        return false;
      if (!this.resource_implement.equals(that.resource_implement))
        return false;
    }

    boolean this_present_entry_invoke = true && this.isSetEntry_invoke();
    boolean that_present_entry_invoke = true && that.isSetEntry_invoke();
    if (this_present_entry_invoke || that_present_entry_invoke) {
      if (!(this_present_entry_invoke && that_present_entry_invoke))
        return false;
      if (!this.entry_invoke.equals(that.entry_invoke))
        return false;
    }

    boolean this_present_entry_return = true && this.isSetEntry_return();
    boolean that_present_entry_return = true && that.isSetEntry_return();
    if (this_present_entry_return || that_present_entry_return) {
      if (!(this_present_entry_return && that_present_entry_return))
        return false;
      if (!this.entry_return.equals(that.entry_return))
        return false;
    }

    boolean this_present_method_invoke = true && this.isSetMethod_invoke();
    boolean that_present_method_invoke = true && that.isSetMethod_invoke();
    if (this_present_method_invoke || that_present_method_invoke) {
      if (!(this_present_method_invoke && that_present_method_invoke))
        return false;
      if (!this.method_invoke.equals(that.method_invoke))
        return false;
    }

    boolean this_present_method_return = true && this.isSetMethod_return();
    boolean that_present_method_return = true && that.isSetMethod_return();
    if (this_present_method_return || that_present_method_return) {
      if (!(this_present_method_return && that_present_method_return))
        return false;
      if (!this.method_return.equals(that.method_return))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ServerDataUnit other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetHost_app_context()).compareTo(other.isSetHost_app_context());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHost_app_context()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.host_app_context, other.host_app_context);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApp_resource()).compareTo(other.isSetApp_resource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApp_resource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.app_resource, other.app_resource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResource_implement()).compareTo(other.isSetResource_implement());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_implement()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_implement, other.resource_implement);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEntry_invoke()).compareTo(other.isSetEntry_invoke());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntry_invoke()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entry_invoke, other.entry_invoke);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEntry_return()).compareTo(other.isSetEntry_return());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntry_return()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entry_return, other.entry_return);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMethod_invoke()).compareTo(other.isSetMethod_invoke());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMethod_invoke()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.method_invoke, other.method_invoke);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMethod_return()).compareTo(other.isSetMethod_return());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMethod_return()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.method_return, other.method_return);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ServerDataUnit(");
    boolean first = true;

    sb.append("host_app_context:");
    if (this.host_app_context == null) {
      sb.append("null");
    } else {
      sb.append(this.host_app_context);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("app_resource:");
    if (this.app_resource == null) {
      sb.append("null");
    } else {
      sb.append(this.app_resource);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_implement:");
    if (this.resource_implement == null) {
      sb.append("null");
    } else {
      sb.append(this.resource_implement);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("entry_invoke:");
    if (this.entry_invoke == null) {
      sb.append("null");
    } else {
      sb.append(this.entry_invoke);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("entry_return:");
    if (this.entry_return == null) {
      sb.append("null");
    } else {
      sb.append(this.entry_return);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("method_invoke:");
    if (this.method_invoke == null) {
      sb.append("null");
    } else {
      sb.append(this.method_invoke);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("method_return:");
    if (this.method_return == null) {
      sb.append("null");
    } else {
      sb.append(this.method_return);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (host_app_context != null) {
      host_app_context.validate();
    }
    if (app_resource != null) {
      app_resource.validate();
    }
    if (resource_implement != null) {
      resource_implement.validate();
    }
    if (entry_invoke != null) {
      entry_invoke.validate();
    }
    if (entry_return != null) {
      entry_return.validate();
    }
    if (method_invoke != null) {
      method_invoke.validate();
    }
    if (method_return != null) {
      method_return.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ServerDataUnitStandardSchemeFactory implements SchemeFactory {
    public ServerDataUnitStandardScheme getScheme() {
      return new ServerDataUnitStandardScheme();
    }
  }

  private static class ServerDataUnitStandardScheme extends StandardScheme<ServerDataUnit> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ServerDataUnit struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // HOST_APP_CONTEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.host_app_context = new HostAppContextEdge();
              struct.host_app_context.read(iprot);
              struct.setHost_app_contextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APP_RESOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.app_resource = new AppResourceEdge();
              struct.app_resource.read(iprot);
              struct.setApp_resourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RESOURCE_IMPLEMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.resource_implement = new ResourceImplEdge();
              struct.resource_implement.read(iprot);
              struct.setResource_implementIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ENTRY_INVOKE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.entry_invoke = new EntryInvokeProperty();
              struct.entry_invoke.read(iprot);
              struct.setEntry_invokeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ENTRY_RETURN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.entry_return = new EntryReturnProperty();
              struct.entry_return.read(iprot);
              struct.setEntry_returnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // METHOD_INVOKE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.method_invoke = new MethodInvokeProperty();
              struct.method_invoke.read(iprot);
              struct.setMethod_invokeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // METHOD_RETURN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.method_return = new MethodReturnProperty();
              struct.method_return.read(iprot);
              struct.setMethod_returnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ServerDataUnit struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.host_app_context != null) {
        oprot.writeFieldBegin(HOST_APP_CONTEXT_FIELD_DESC);
        struct.host_app_context.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.app_resource != null) {
        oprot.writeFieldBegin(APP_RESOURCE_FIELD_DESC);
        struct.app_resource.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.resource_implement != null) {
        oprot.writeFieldBegin(RESOURCE_IMPLEMENT_FIELD_DESC);
        struct.resource_implement.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.entry_invoke != null) {
        oprot.writeFieldBegin(ENTRY_INVOKE_FIELD_DESC);
        struct.entry_invoke.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.entry_return != null) {
        oprot.writeFieldBegin(ENTRY_RETURN_FIELD_DESC);
        struct.entry_return.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.method_invoke != null) {
        oprot.writeFieldBegin(METHOD_INVOKE_FIELD_DESC);
        struct.method_invoke.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.method_return != null) {
        oprot.writeFieldBegin(METHOD_RETURN_FIELD_DESC);
        struct.method_return.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ServerDataUnitTupleSchemeFactory implements SchemeFactory {
    public ServerDataUnitTupleScheme getScheme() {
      return new ServerDataUnitTupleScheme();
    }
  }

  private static class ServerDataUnitTupleScheme extends TupleScheme<ServerDataUnit> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ServerDataUnit struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetHost_app_context()) {
        optionals.set(0);
      }
      if (struct.isSetApp_resource()) {
        optionals.set(1);
      }
      if (struct.isSetResource_implement()) {
        optionals.set(2);
      }
      if (struct.isSetEntry_invoke()) {
        optionals.set(3);
      }
      if (struct.isSetEntry_return()) {
        optionals.set(4);
      }
      if (struct.isSetMethod_invoke()) {
        optionals.set(5);
      }
      if (struct.isSetMethod_return()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetHost_app_context()) {
        struct.host_app_context.write(oprot);
      }
      if (struct.isSetApp_resource()) {
        struct.app_resource.write(oprot);
      }
      if (struct.isSetResource_implement()) {
        struct.resource_implement.write(oprot);
      }
      if (struct.isSetEntry_invoke()) {
        struct.entry_invoke.write(oprot);
      }
      if (struct.isSetEntry_return()) {
        struct.entry_return.write(oprot);
      }
      if (struct.isSetMethod_invoke()) {
        struct.method_invoke.write(oprot);
      }
      if (struct.isSetMethod_return()) {
        struct.method_return.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ServerDataUnit struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.host_app_context = new HostAppContextEdge();
        struct.host_app_context.read(iprot);
        struct.setHost_app_contextIsSet(true);
      }
      if (incoming.get(1)) {
        struct.app_resource = new AppResourceEdge();
        struct.app_resource.read(iprot);
        struct.setApp_resourceIsSet(true);
      }
      if (incoming.get(2)) {
        struct.resource_implement = new ResourceImplEdge();
        struct.resource_implement.read(iprot);
        struct.setResource_implementIsSet(true);
      }
      if (incoming.get(3)) {
        struct.entry_invoke = new EntryInvokeProperty();
        struct.entry_invoke.read(iprot);
        struct.setEntry_invokeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.entry_return = new EntryReturnProperty();
        struct.entry_return.read(iprot);
        struct.setEntry_returnIsSet(true);
      }
      if (incoming.get(5)) {
        struct.method_invoke = new MethodInvokeProperty();
        struct.method_invoke.read(iprot);
        struct.setMethod_invokeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.method_return = new MethodReturnProperty();
        struct.method_return.read(iprot);
        struct.setMethod_returnIsSet(true);
      }
    }
  }

}

