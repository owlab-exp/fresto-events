/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package fresto.data;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ApplicationDataUnit extends org.apache.thrift.TUnion<ApplicationDataUnit, ApplicationDataUnit._Fields> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ApplicationDataUnit");
  private static final org.apache.thrift.protocol.TField ENTRY_INVOKE_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("entry_invoke_property", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField ENTRY_RETURN_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("entry_return_property", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField OPERATION_PROPERTY_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("operation_property_property", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField OPERATION_INVOKE_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("operation_invoke_property", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField OPERATION_RETURN_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("operation_return_property", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField HOST_APPLICATION_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("host_application_edge", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField APP_RESOURCE_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("app_resource_edge", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField IMPLEMENT_RESOURCE_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("implement_resource_edge", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField ENTRY_INVOKE_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("entry_invoke_edge", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField ENTRY_RETURN_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("entry_return_edge", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_INVOCATION_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("create_invocation_edge", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField MAKE_INVOCATION_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("make_invocation_edge", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_RESULT_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("create_result_edge", org.apache.thrift.protocol.TType.STRUCT, (short)13);
  private static final org.apache.thrift.protocol.TField RETURN_RESULT_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("return_result_edge", org.apache.thrift.protocol.TType.STRUCT, (short)14);

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ENTRY_INVOKE_PROPERTY((short)1, "entry_invoke_property"),
    ENTRY_RETURN_PROPERTY((short)2, "entry_return_property"),
    OPERATION_PROPERTY_PROPERTY((short)3, "operation_property_property"),
    OPERATION_INVOKE_PROPERTY((short)4, "operation_invoke_property"),
    OPERATION_RETURN_PROPERTY((short)5, "operation_return_property"),
    HOST_APPLICATION_EDGE((short)6, "host_application_edge"),
    APP_RESOURCE_EDGE((short)7, "app_resource_edge"),
    IMPLEMENT_RESOURCE_EDGE((short)8, "implement_resource_edge"),
    ENTRY_INVOKE_EDGE((short)9, "entry_invoke_edge"),
    ENTRY_RETURN_EDGE((short)10, "entry_return_edge"),
    CREATE_INVOCATION_EDGE((short)11, "create_invocation_edge"),
    MAKE_INVOCATION_EDGE((short)12, "make_invocation_edge"),
    CREATE_RESULT_EDGE((short)13, "create_result_edge"),
    RETURN_RESULT_EDGE((short)14, "return_result_edge");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ENTRY_INVOKE_PROPERTY
          return ENTRY_INVOKE_PROPERTY;
        case 2: // ENTRY_RETURN_PROPERTY
          return ENTRY_RETURN_PROPERTY;
        case 3: // OPERATION_PROPERTY_PROPERTY
          return OPERATION_PROPERTY_PROPERTY;
        case 4: // OPERATION_INVOKE_PROPERTY
          return OPERATION_INVOKE_PROPERTY;
        case 5: // OPERATION_RETURN_PROPERTY
          return OPERATION_RETURN_PROPERTY;
        case 6: // HOST_APPLICATION_EDGE
          return HOST_APPLICATION_EDGE;
        case 7: // APP_RESOURCE_EDGE
          return APP_RESOURCE_EDGE;
        case 8: // IMPLEMENT_RESOURCE_EDGE
          return IMPLEMENT_RESOURCE_EDGE;
        case 9: // ENTRY_INVOKE_EDGE
          return ENTRY_INVOKE_EDGE;
        case 10: // ENTRY_RETURN_EDGE
          return ENTRY_RETURN_EDGE;
        case 11: // CREATE_INVOCATION_EDGE
          return CREATE_INVOCATION_EDGE;
        case 12: // MAKE_INVOCATION_EDGE
          return MAKE_INVOCATION_EDGE;
        case 13: // CREATE_RESULT_EDGE
          return CREATE_RESULT_EDGE;
        case 14: // RETURN_RESULT_EDGE
          return RETURN_RESULT_EDGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ENTRY_INVOKE_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("entry_invoke_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EntryInvokeProperty.class)));
    tmpMap.put(_Fields.ENTRY_RETURN_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("entry_return_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EntryReturnProperty.class)));
    tmpMap.put(_Fields.OPERATION_PROPERTY_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("operation_property_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OperationProperty.class)));
    tmpMap.put(_Fields.OPERATION_INVOKE_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("operation_invoke_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OperationInvokeProperty.class)));
    tmpMap.put(_Fields.OPERATION_RETURN_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("operation_return_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OperationReturnProperty.class)));
    tmpMap.put(_Fields.HOST_APPLICATION_EDGE, new org.apache.thrift.meta_data.FieldMetaData("host_application_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ServeApplicationEdge.class)));
    tmpMap.put(_Fields.APP_RESOURCE_EDGE, new org.apache.thrift.meta_data.FieldMetaData("app_resource_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ManageResourceEdge.class)));
    tmpMap.put(_Fields.IMPLEMENT_RESOURCE_EDGE, new org.apache.thrift.meta_data.FieldMetaData("implement_resource_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ImplementResourceEdge.class)));
    tmpMap.put(_Fields.ENTRY_INVOKE_EDGE, new org.apache.thrift.meta_data.FieldMetaData("entry_invoke_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EntryInvokeEdge.class)));
    tmpMap.put(_Fields.ENTRY_RETURN_EDGE, new org.apache.thrift.meta_data.FieldMetaData("entry_return_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EntryReturnEdge.class)));
    tmpMap.put(_Fields.CREATE_INVOCATION_EDGE, new org.apache.thrift.meta_data.FieldMetaData("create_invocation_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CreateInvocationEdge.class)));
    tmpMap.put(_Fields.MAKE_INVOCATION_EDGE, new org.apache.thrift.meta_data.FieldMetaData("make_invocation_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MakeInvocationEdge.class)));
    tmpMap.put(_Fields.CREATE_RESULT_EDGE, new org.apache.thrift.meta_data.FieldMetaData("create_result_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CreateResultEdge.class)));
    tmpMap.put(_Fields.RETURN_RESULT_EDGE, new org.apache.thrift.meta_data.FieldMetaData("return_result_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ReturnResultEdge.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ApplicationDataUnit.class, metaDataMap);
  }

  public ApplicationDataUnit() {
    super();
  }

  public ApplicationDataUnit(_Fields setField, Object value) {
    super(setField, value);
  }

  public ApplicationDataUnit(ApplicationDataUnit other) {
    super(other);
  }
  public ApplicationDataUnit deepCopy() {
    return new ApplicationDataUnit(this);
  }

  public static ApplicationDataUnit entry_invoke_property(EntryInvokeProperty value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setEntry_invoke_property(value);
    return x;
  }

  public static ApplicationDataUnit entry_return_property(EntryReturnProperty value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setEntry_return_property(value);
    return x;
  }

  public static ApplicationDataUnit operation_property_property(OperationProperty value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setOperation_property_property(value);
    return x;
  }

  public static ApplicationDataUnit operation_invoke_property(OperationInvokeProperty value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setOperation_invoke_property(value);
    return x;
  }

  public static ApplicationDataUnit operation_return_property(OperationReturnProperty value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setOperation_return_property(value);
    return x;
  }

  public static ApplicationDataUnit host_application_edge(ServeApplicationEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setHost_application_edge(value);
    return x;
  }

  public static ApplicationDataUnit app_resource_edge(ManageResourceEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setApp_resource_edge(value);
    return x;
  }

  public static ApplicationDataUnit implement_resource_edge(ImplementResourceEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setImplement_resource_edge(value);
    return x;
  }

  public static ApplicationDataUnit entry_invoke_edge(EntryInvokeEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setEntry_invoke_edge(value);
    return x;
  }

  public static ApplicationDataUnit entry_return_edge(EntryReturnEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setEntry_return_edge(value);
    return x;
  }

  public static ApplicationDataUnit create_invocation_edge(CreateInvocationEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setCreate_invocation_edge(value);
    return x;
  }

  public static ApplicationDataUnit make_invocation_edge(MakeInvocationEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setMake_invocation_edge(value);
    return x;
  }

  public static ApplicationDataUnit create_result_edge(CreateResultEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setCreate_result_edge(value);
    return x;
  }

  public static ApplicationDataUnit return_result_edge(ReturnResultEdge value) {
    ApplicationDataUnit x = new ApplicationDataUnit();
    x.setReturn_result_edge(value);
    return x;
  }


  @Override
  protected void checkType(_Fields setField, Object value) throws ClassCastException {
    switch (setField) {
      case ENTRY_INVOKE_PROPERTY:
        if (value instanceof EntryInvokeProperty) {
          break;
        }
        throw new ClassCastException("Was expecting value of type EntryInvokeProperty for field 'entry_invoke_property', but got " + value.getClass().getSimpleName());
      case ENTRY_RETURN_PROPERTY:
        if (value instanceof EntryReturnProperty) {
          break;
        }
        throw new ClassCastException("Was expecting value of type EntryReturnProperty for field 'entry_return_property', but got " + value.getClass().getSimpleName());
      case OPERATION_PROPERTY_PROPERTY:
        if (value instanceof OperationProperty) {
          break;
        }
        throw new ClassCastException("Was expecting value of type OperationProperty for field 'operation_property_property', but got " + value.getClass().getSimpleName());
      case OPERATION_INVOKE_PROPERTY:
        if (value instanceof OperationInvokeProperty) {
          break;
        }
        throw new ClassCastException("Was expecting value of type OperationInvokeProperty for field 'operation_invoke_property', but got " + value.getClass().getSimpleName());
      case OPERATION_RETURN_PROPERTY:
        if (value instanceof OperationReturnProperty) {
          break;
        }
        throw new ClassCastException("Was expecting value of type OperationReturnProperty for field 'operation_return_property', but got " + value.getClass().getSimpleName());
      case HOST_APPLICATION_EDGE:
        if (value instanceof ServeApplicationEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type ServeApplicationEdge for field 'host_application_edge', but got " + value.getClass().getSimpleName());
      case APP_RESOURCE_EDGE:
        if (value instanceof ManageResourceEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type ManageResourceEdge for field 'app_resource_edge', but got " + value.getClass().getSimpleName());
      case IMPLEMENT_RESOURCE_EDGE:
        if (value instanceof ImplementResourceEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type ImplementResourceEdge for field 'implement_resource_edge', but got " + value.getClass().getSimpleName());
      case ENTRY_INVOKE_EDGE:
        if (value instanceof EntryInvokeEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type EntryInvokeEdge for field 'entry_invoke_edge', but got " + value.getClass().getSimpleName());
      case ENTRY_RETURN_EDGE:
        if (value instanceof EntryReturnEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type EntryReturnEdge for field 'entry_return_edge', but got " + value.getClass().getSimpleName());
      case CREATE_INVOCATION_EDGE:
        if (value instanceof CreateInvocationEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type CreateInvocationEdge for field 'create_invocation_edge', but got " + value.getClass().getSimpleName());
      case MAKE_INVOCATION_EDGE:
        if (value instanceof MakeInvocationEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type MakeInvocationEdge for field 'make_invocation_edge', but got " + value.getClass().getSimpleName());
      case CREATE_RESULT_EDGE:
        if (value instanceof CreateResultEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type CreateResultEdge for field 'create_result_edge', but got " + value.getClass().getSimpleName());
      case RETURN_RESULT_EDGE:
        if (value instanceof ReturnResultEdge) {
          break;
        }
        throw new ClassCastException("Was expecting value of type ReturnResultEdge for field 'return_result_edge', but got " + value.getClass().getSimpleName());
      default:
        throw new IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected Object standardSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TField field) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(field.id);
    if (setField != null) {
      switch (setField) {
        case ENTRY_INVOKE_PROPERTY:
          if (field.type == ENTRY_INVOKE_PROPERTY_FIELD_DESC.type) {
            EntryInvokeProperty entry_invoke_property;
            entry_invoke_property = new EntryInvokeProperty();
            entry_invoke_property.read(iprot);
            return entry_invoke_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case ENTRY_RETURN_PROPERTY:
          if (field.type == ENTRY_RETURN_PROPERTY_FIELD_DESC.type) {
            EntryReturnProperty entry_return_property;
            entry_return_property = new EntryReturnProperty();
            entry_return_property.read(iprot);
            return entry_return_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case OPERATION_PROPERTY_PROPERTY:
          if (field.type == OPERATION_PROPERTY_PROPERTY_FIELD_DESC.type) {
            OperationProperty operation_property_property;
            operation_property_property = new OperationProperty();
            operation_property_property.read(iprot);
            return operation_property_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case OPERATION_INVOKE_PROPERTY:
          if (field.type == OPERATION_INVOKE_PROPERTY_FIELD_DESC.type) {
            OperationInvokeProperty operation_invoke_property;
            operation_invoke_property = new OperationInvokeProperty();
            operation_invoke_property.read(iprot);
            return operation_invoke_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case OPERATION_RETURN_PROPERTY:
          if (field.type == OPERATION_RETURN_PROPERTY_FIELD_DESC.type) {
            OperationReturnProperty operation_return_property;
            operation_return_property = new OperationReturnProperty();
            operation_return_property.read(iprot);
            return operation_return_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case HOST_APPLICATION_EDGE:
          if (field.type == HOST_APPLICATION_EDGE_FIELD_DESC.type) {
            ServeApplicationEdge host_application_edge;
            host_application_edge = new ServeApplicationEdge();
            host_application_edge.read(iprot);
            return host_application_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case APP_RESOURCE_EDGE:
          if (field.type == APP_RESOURCE_EDGE_FIELD_DESC.type) {
            ManageResourceEdge app_resource_edge;
            app_resource_edge = new ManageResourceEdge();
            app_resource_edge.read(iprot);
            return app_resource_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case IMPLEMENT_RESOURCE_EDGE:
          if (field.type == IMPLEMENT_RESOURCE_EDGE_FIELD_DESC.type) {
            ImplementResourceEdge implement_resource_edge;
            implement_resource_edge = new ImplementResourceEdge();
            implement_resource_edge.read(iprot);
            return implement_resource_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case ENTRY_INVOKE_EDGE:
          if (field.type == ENTRY_INVOKE_EDGE_FIELD_DESC.type) {
            EntryInvokeEdge entry_invoke_edge;
            entry_invoke_edge = new EntryInvokeEdge();
            entry_invoke_edge.read(iprot);
            return entry_invoke_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case ENTRY_RETURN_EDGE:
          if (field.type == ENTRY_RETURN_EDGE_FIELD_DESC.type) {
            EntryReturnEdge entry_return_edge;
            entry_return_edge = new EntryReturnEdge();
            entry_return_edge.read(iprot);
            return entry_return_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CREATE_INVOCATION_EDGE:
          if (field.type == CREATE_INVOCATION_EDGE_FIELD_DESC.type) {
            CreateInvocationEdge create_invocation_edge;
            create_invocation_edge = new CreateInvocationEdge();
            create_invocation_edge.read(iprot);
            return create_invocation_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case MAKE_INVOCATION_EDGE:
          if (field.type == MAKE_INVOCATION_EDGE_FIELD_DESC.type) {
            MakeInvocationEdge make_invocation_edge;
            make_invocation_edge = new MakeInvocationEdge();
            make_invocation_edge.read(iprot);
            return make_invocation_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CREATE_RESULT_EDGE:
          if (field.type == CREATE_RESULT_EDGE_FIELD_DESC.type) {
            CreateResultEdge create_result_edge;
            create_result_edge = new CreateResultEdge();
            create_result_edge.read(iprot);
            return create_result_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case RETURN_RESULT_EDGE:
          if (field.type == RETURN_RESULT_EDGE_FIELD_DESC.type) {
            ReturnResultEdge return_result_edge;
            return_result_edge = new ReturnResultEdge();
            return_result_edge.read(iprot);
            return return_result_edge;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        default:
          throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      return null;
    }
  }

  @Override
  protected void standardSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case ENTRY_INVOKE_PROPERTY:
        EntryInvokeProperty entry_invoke_property = (EntryInvokeProperty)value_;
        entry_invoke_property.write(oprot);
        return;
      case ENTRY_RETURN_PROPERTY:
        EntryReturnProperty entry_return_property = (EntryReturnProperty)value_;
        entry_return_property.write(oprot);
        return;
      case OPERATION_PROPERTY_PROPERTY:
        OperationProperty operation_property_property = (OperationProperty)value_;
        operation_property_property.write(oprot);
        return;
      case OPERATION_INVOKE_PROPERTY:
        OperationInvokeProperty operation_invoke_property = (OperationInvokeProperty)value_;
        operation_invoke_property.write(oprot);
        return;
      case OPERATION_RETURN_PROPERTY:
        OperationReturnProperty operation_return_property = (OperationReturnProperty)value_;
        operation_return_property.write(oprot);
        return;
      case HOST_APPLICATION_EDGE:
        ServeApplicationEdge host_application_edge = (ServeApplicationEdge)value_;
        host_application_edge.write(oprot);
        return;
      case APP_RESOURCE_EDGE:
        ManageResourceEdge app_resource_edge = (ManageResourceEdge)value_;
        app_resource_edge.write(oprot);
        return;
      case IMPLEMENT_RESOURCE_EDGE:
        ImplementResourceEdge implement_resource_edge = (ImplementResourceEdge)value_;
        implement_resource_edge.write(oprot);
        return;
      case ENTRY_INVOKE_EDGE:
        EntryInvokeEdge entry_invoke_edge = (EntryInvokeEdge)value_;
        entry_invoke_edge.write(oprot);
        return;
      case ENTRY_RETURN_EDGE:
        EntryReturnEdge entry_return_edge = (EntryReturnEdge)value_;
        entry_return_edge.write(oprot);
        return;
      case CREATE_INVOCATION_EDGE:
        CreateInvocationEdge create_invocation_edge = (CreateInvocationEdge)value_;
        create_invocation_edge.write(oprot);
        return;
      case MAKE_INVOCATION_EDGE:
        MakeInvocationEdge make_invocation_edge = (MakeInvocationEdge)value_;
        make_invocation_edge.write(oprot);
        return;
      case CREATE_RESULT_EDGE:
        CreateResultEdge create_result_edge = (CreateResultEdge)value_;
        create_result_edge.write(oprot);
        return;
      case RETURN_RESULT_EDGE:
        ReturnResultEdge return_result_edge = (ReturnResultEdge)value_;
        return_result_edge.write(oprot);
        return;
      default:
        throw new IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected Object tupleSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, short fieldID) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(fieldID);
    if (setField != null) {
      switch (setField) {
        case ENTRY_INVOKE_PROPERTY:
          EntryInvokeProperty entry_invoke_property;
          entry_invoke_property = new EntryInvokeProperty();
          entry_invoke_property.read(iprot);
          return entry_invoke_property;
        case ENTRY_RETURN_PROPERTY:
          EntryReturnProperty entry_return_property;
          entry_return_property = new EntryReturnProperty();
          entry_return_property.read(iprot);
          return entry_return_property;
        case OPERATION_PROPERTY_PROPERTY:
          OperationProperty operation_property_property;
          operation_property_property = new OperationProperty();
          operation_property_property.read(iprot);
          return operation_property_property;
        case OPERATION_INVOKE_PROPERTY:
          OperationInvokeProperty operation_invoke_property;
          operation_invoke_property = new OperationInvokeProperty();
          operation_invoke_property.read(iprot);
          return operation_invoke_property;
        case OPERATION_RETURN_PROPERTY:
          OperationReturnProperty operation_return_property;
          operation_return_property = new OperationReturnProperty();
          operation_return_property.read(iprot);
          return operation_return_property;
        case HOST_APPLICATION_EDGE:
          ServeApplicationEdge host_application_edge;
          host_application_edge = new ServeApplicationEdge();
          host_application_edge.read(iprot);
          return host_application_edge;
        case APP_RESOURCE_EDGE:
          ManageResourceEdge app_resource_edge;
          app_resource_edge = new ManageResourceEdge();
          app_resource_edge.read(iprot);
          return app_resource_edge;
        case IMPLEMENT_RESOURCE_EDGE:
          ImplementResourceEdge implement_resource_edge;
          implement_resource_edge = new ImplementResourceEdge();
          implement_resource_edge.read(iprot);
          return implement_resource_edge;
        case ENTRY_INVOKE_EDGE:
          EntryInvokeEdge entry_invoke_edge;
          entry_invoke_edge = new EntryInvokeEdge();
          entry_invoke_edge.read(iprot);
          return entry_invoke_edge;
        case ENTRY_RETURN_EDGE:
          EntryReturnEdge entry_return_edge;
          entry_return_edge = new EntryReturnEdge();
          entry_return_edge.read(iprot);
          return entry_return_edge;
        case CREATE_INVOCATION_EDGE:
          CreateInvocationEdge create_invocation_edge;
          create_invocation_edge = new CreateInvocationEdge();
          create_invocation_edge.read(iprot);
          return create_invocation_edge;
        case MAKE_INVOCATION_EDGE:
          MakeInvocationEdge make_invocation_edge;
          make_invocation_edge = new MakeInvocationEdge();
          make_invocation_edge.read(iprot);
          return make_invocation_edge;
        case CREATE_RESULT_EDGE:
          CreateResultEdge create_result_edge;
          create_result_edge = new CreateResultEdge();
          create_result_edge.read(iprot);
          return create_result_edge;
        case RETURN_RESULT_EDGE:
          ReturnResultEdge return_result_edge;
          return_result_edge = new ReturnResultEdge();
          return_result_edge.read(iprot);
          return return_result_edge;
        default:
          throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      throw new TProtocolException("Couldn't find a field with field id " + fieldID);
    }
  }

  @Override
  protected void tupleSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case ENTRY_INVOKE_PROPERTY:
        EntryInvokeProperty entry_invoke_property = (EntryInvokeProperty)value_;
        entry_invoke_property.write(oprot);
        return;
      case ENTRY_RETURN_PROPERTY:
        EntryReturnProperty entry_return_property = (EntryReturnProperty)value_;
        entry_return_property.write(oprot);
        return;
      case OPERATION_PROPERTY_PROPERTY:
        OperationProperty operation_property_property = (OperationProperty)value_;
        operation_property_property.write(oprot);
        return;
      case OPERATION_INVOKE_PROPERTY:
        OperationInvokeProperty operation_invoke_property = (OperationInvokeProperty)value_;
        operation_invoke_property.write(oprot);
        return;
      case OPERATION_RETURN_PROPERTY:
        OperationReturnProperty operation_return_property = (OperationReturnProperty)value_;
        operation_return_property.write(oprot);
        return;
      case HOST_APPLICATION_EDGE:
        ServeApplicationEdge host_application_edge = (ServeApplicationEdge)value_;
        host_application_edge.write(oprot);
        return;
      case APP_RESOURCE_EDGE:
        ManageResourceEdge app_resource_edge = (ManageResourceEdge)value_;
        app_resource_edge.write(oprot);
        return;
      case IMPLEMENT_RESOURCE_EDGE:
        ImplementResourceEdge implement_resource_edge = (ImplementResourceEdge)value_;
        implement_resource_edge.write(oprot);
        return;
      case ENTRY_INVOKE_EDGE:
        EntryInvokeEdge entry_invoke_edge = (EntryInvokeEdge)value_;
        entry_invoke_edge.write(oprot);
        return;
      case ENTRY_RETURN_EDGE:
        EntryReturnEdge entry_return_edge = (EntryReturnEdge)value_;
        entry_return_edge.write(oprot);
        return;
      case CREATE_INVOCATION_EDGE:
        CreateInvocationEdge create_invocation_edge = (CreateInvocationEdge)value_;
        create_invocation_edge.write(oprot);
        return;
      case MAKE_INVOCATION_EDGE:
        MakeInvocationEdge make_invocation_edge = (MakeInvocationEdge)value_;
        make_invocation_edge.write(oprot);
        return;
      case CREATE_RESULT_EDGE:
        CreateResultEdge create_result_edge = (CreateResultEdge)value_;
        create_result_edge.write(oprot);
        return;
      case RETURN_RESULT_EDGE:
        ReturnResultEdge return_result_edge = (ReturnResultEdge)value_;
        return_result_edge.write(oprot);
        return;
      default:
        throw new IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TField getFieldDesc(_Fields setField) {
    switch (setField) {
      case ENTRY_INVOKE_PROPERTY:
        return ENTRY_INVOKE_PROPERTY_FIELD_DESC;
      case ENTRY_RETURN_PROPERTY:
        return ENTRY_RETURN_PROPERTY_FIELD_DESC;
      case OPERATION_PROPERTY_PROPERTY:
        return OPERATION_PROPERTY_PROPERTY_FIELD_DESC;
      case OPERATION_INVOKE_PROPERTY:
        return OPERATION_INVOKE_PROPERTY_FIELD_DESC;
      case OPERATION_RETURN_PROPERTY:
        return OPERATION_RETURN_PROPERTY_FIELD_DESC;
      case HOST_APPLICATION_EDGE:
        return HOST_APPLICATION_EDGE_FIELD_DESC;
      case APP_RESOURCE_EDGE:
        return APP_RESOURCE_EDGE_FIELD_DESC;
      case IMPLEMENT_RESOURCE_EDGE:
        return IMPLEMENT_RESOURCE_EDGE_FIELD_DESC;
      case ENTRY_INVOKE_EDGE:
        return ENTRY_INVOKE_EDGE_FIELD_DESC;
      case ENTRY_RETURN_EDGE:
        return ENTRY_RETURN_EDGE_FIELD_DESC;
      case CREATE_INVOCATION_EDGE:
        return CREATE_INVOCATION_EDGE_FIELD_DESC;
      case MAKE_INVOCATION_EDGE:
        return MAKE_INVOCATION_EDGE_FIELD_DESC;
      case CREATE_RESULT_EDGE:
        return CREATE_RESULT_EDGE_FIELD_DESC;
      case RETURN_RESULT_EDGE:
        return RETURN_RESULT_EDGE_FIELD_DESC;
      default:
        throw new IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TStruct getStructDesc() {
    return STRUCT_DESC;
  }

  @Override
  protected _Fields enumForId(short id) {
    return _Fields.findByThriftIdOrThrow(id);
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public EntryInvokeProperty getEntry_invoke_property() {
    if (getSetField() == _Fields.ENTRY_INVOKE_PROPERTY) {
      return (EntryInvokeProperty)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'entry_invoke_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEntry_invoke_property(EntryInvokeProperty value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.ENTRY_INVOKE_PROPERTY;
    value_ = value;
  }

  public EntryReturnProperty getEntry_return_property() {
    if (getSetField() == _Fields.ENTRY_RETURN_PROPERTY) {
      return (EntryReturnProperty)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'entry_return_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEntry_return_property(EntryReturnProperty value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.ENTRY_RETURN_PROPERTY;
    value_ = value;
  }

  public OperationProperty getOperation_property_property() {
    if (getSetField() == _Fields.OPERATION_PROPERTY_PROPERTY) {
      return (OperationProperty)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'operation_property_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setOperation_property_property(OperationProperty value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.OPERATION_PROPERTY_PROPERTY;
    value_ = value;
  }

  public OperationInvokeProperty getOperation_invoke_property() {
    if (getSetField() == _Fields.OPERATION_INVOKE_PROPERTY) {
      return (OperationInvokeProperty)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'operation_invoke_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setOperation_invoke_property(OperationInvokeProperty value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.OPERATION_INVOKE_PROPERTY;
    value_ = value;
  }

  public OperationReturnProperty getOperation_return_property() {
    if (getSetField() == _Fields.OPERATION_RETURN_PROPERTY) {
      return (OperationReturnProperty)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'operation_return_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setOperation_return_property(OperationReturnProperty value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.OPERATION_RETURN_PROPERTY;
    value_ = value;
  }

  public ServeApplicationEdge getHost_application_edge() {
    if (getSetField() == _Fields.HOST_APPLICATION_EDGE) {
      return (ServeApplicationEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'host_application_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setHost_application_edge(ServeApplicationEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.HOST_APPLICATION_EDGE;
    value_ = value;
  }

  public ManageResourceEdge getApp_resource_edge() {
    if (getSetField() == _Fields.APP_RESOURCE_EDGE) {
      return (ManageResourceEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'app_resource_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setApp_resource_edge(ManageResourceEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.APP_RESOURCE_EDGE;
    value_ = value;
  }

  public ImplementResourceEdge getImplement_resource_edge() {
    if (getSetField() == _Fields.IMPLEMENT_RESOURCE_EDGE) {
      return (ImplementResourceEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'implement_resource_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setImplement_resource_edge(ImplementResourceEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.IMPLEMENT_RESOURCE_EDGE;
    value_ = value;
  }

  public EntryInvokeEdge getEntry_invoke_edge() {
    if (getSetField() == _Fields.ENTRY_INVOKE_EDGE) {
      return (EntryInvokeEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'entry_invoke_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEntry_invoke_edge(EntryInvokeEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.ENTRY_INVOKE_EDGE;
    value_ = value;
  }

  public EntryReturnEdge getEntry_return_edge() {
    if (getSetField() == _Fields.ENTRY_RETURN_EDGE) {
      return (EntryReturnEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'entry_return_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEntry_return_edge(EntryReturnEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.ENTRY_RETURN_EDGE;
    value_ = value;
  }

  public CreateInvocationEdge getCreate_invocation_edge() {
    if (getSetField() == _Fields.CREATE_INVOCATION_EDGE) {
      return (CreateInvocationEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'create_invocation_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCreate_invocation_edge(CreateInvocationEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.CREATE_INVOCATION_EDGE;
    value_ = value;
  }

  public MakeInvocationEdge getMake_invocation_edge() {
    if (getSetField() == _Fields.MAKE_INVOCATION_EDGE) {
      return (MakeInvocationEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'make_invocation_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setMake_invocation_edge(MakeInvocationEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.MAKE_INVOCATION_EDGE;
    value_ = value;
  }

  public CreateResultEdge getCreate_result_edge() {
    if (getSetField() == _Fields.CREATE_RESULT_EDGE) {
      return (CreateResultEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'create_result_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCreate_result_edge(CreateResultEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.CREATE_RESULT_EDGE;
    value_ = value;
  }

  public ReturnResultEdge getReturn_result_edge() {
    if (getSetField() == _Fields.RETURN_RESULT_EDGE) {
      return (ReturnResultEdge)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'return_result_edge' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setReturn_result_edge(ReturnResultEdge value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.RETURN_RESULT_EDGE;
    value_ = value;
  }

  public boolean isSetEntry_invoke_property() {
    return setField_ == _Fields.ENTRY_INVOKE_PROPERTY;
  }


  public boolean isSetEntry_return_property() {
    return setField_ == _Fields.ENTRY_RETURN_PROPERTY;
  }


  public boolean isSetOperation_property_property() {
    return setField_ == _Fields.OPERATION_PROPERTY_PROPERTY;
  }


  public boolean isSetOperation_invoke_property() {
    return setField_ == _Fields.OPERATION_INVOKE_PROPERTY;
  }


  public boolean isSetOperation_return_property() {
    return setField_ == _Fields.OPERATION_RETURN_PROPERTY;
  }


  public boolean isSetHost_application_edge() {
    return setField_ == _Fields.HOST_APPLICATION_EDGE;
  }


  public boolean isSetApp_resource_edge() {
    return setField_ == _Fields.APP_RESOURCE_EDGE;
  }


  public boolean isSetImplement_resource_edge() {
    return setField_ == _Fields.IMPLEMENT_RESOURCE_EDGE;
  }


  public boolean isSetEntry_invoke_edge() {
    return setField_ == _Fields.ENTRY_INVOKE_EDGE;
  }


  public boolean isSetEntry_return_edge() {
    return setField_ == _Fields.ENTRY_RETURN_EDGE;
  }


  public boolean isSetCreate_invocation_edge() {
    return setField_ == _Fields.CREATE_INVOCATION_EDGE;
  }


  public boolean isSetMake_invocation_edge() {
    return setField_ == _Fields.MAKE_INVOCATION_EDGE;
  }


  public boolean isSetCreate_result_edge() {
    return setField_ == _Fields.CREATE_RESULT_EDGE;
  }


  public boolean isSetReturn_result_edge() {
    return setField_ == _Fields.RETURN_RESULT_EDGE;
  }


  public boolean equals(Object other) {
    if (other instanceof ApplicationDataUnit) {
      return equals((ApplicationDataUnit)other);
    } else {
      return false;
    }
  }

  public boolean equals(ApplicationDataUnit other) {
    return other != null && getSetField() == other.getSetField() && getFieldValue().equals(other.getFieldValue());
  }

  @Override
  public int compareTo(ApplicationDataUnit other) {
    int lastComparison = org.apache.thrift.TBaseHelper.compareTo(getSetField(), other.getSetField());
    if (lastComparison == 0) {
      return org.apache.thrift.TBaseHelper.compareTo(getFieldValue(), other.getFieldValue());
    }
    return lastComparison;
  }


  /**
   * If you'd like this to perform more respectably, use the hashcode generator option.
   */
  @Override
  public int hashCode() {
    return 0;
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


}
