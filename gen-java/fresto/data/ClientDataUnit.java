/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package fresto.data;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ClientDataUnit implements org.apache.thrift.TBase<ClientDataUnit, ClientDataUnit._Fields>, java.io.Serializable, Cloneable, Comparable<ClientDataUnit> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ClientDataUnit");

  private static final org.apache.thrift.protocol.TField CLIENT_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("client_property", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField RESOURCE_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_property", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField REQUEST_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("request_property", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField RESPONSE_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("response_property", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField CLIENT_REQUEST_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("client_request_edge", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField REQUEST_RESOURCE_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("request_resource_edge", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField RESOURCE_RESPONSE_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_response_edge", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField RESPONSE_CLIENT_EDGE_FIELD_DESC = new org.apache.thrift.protocol.TField("response_client_edge", org.apache.thrift.protocol.TType.STRUCT, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ClientDataUnitStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ClientDataUnitTupleSchemeFactory());
  }

  public ClientProperty client_property; // required
  public ResourceProperty resource_property; // required
  public RequestProperty request_property; // required
  public ResponseProperty response_property; // required
  public ClientRequestEdge client_request_edge; // required
  public RequestResourceEdge request_resource_edge; // required
  public ResourceResponseEdge resource_response_edge; // required
  public ResponseClientEdge response_client_edge; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CLIENT_PROPERTY((short)1, "client_property"),
    RESOURCE_PROPERTY((short)2, "resource_property"),
    REQUEST_PROPERTY((short)3, "request_property"),
    RESPONSE_PROPERTY((short)4, "response_property"),
    CLIENT_REQUEST_EDGE((short)5, "client_request_edge"),
    REQUEST_RESOURCE_EDGE((short)6, "request_resource_edge"),
    RESOURCE_RESPONSE_EDGE((short)7, "resource_response_edge"),
    RESPONSE_CLIENT_EDGE((short)8, "response_client_edge");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLIENT_PROPERTY
          return CLIENT_PROPERTY;
        case 2: // RESOURCE_PROPERTY
          return RESOURCE_PROPERTY;
        case 3: // REQUEST_PROPERTY
          return REQUEST_PROPERTY;
        case 4: // RESPONSE_PROPERTY
          return RESPONSE_PROPERTY;
        case 5: // CLIENT_REQUEST_EDGE
          return CLIENT_REQUEST_EDGE;
        case 6: // REQUEST_RESOURCE_EDGE
          return REQUEST_RESOURCE_EDGE;
        case 7: // RESOURCE_RESPONSE_EDGE
          return RESOURCE_RESPONSE_EDGE;
        case 8: // RESPONSE_CLIENT_EDGE
          return RESPONSE_CLIENT_EDGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLIENT_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("client_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ClientProperty.class)));
    tmpMap.put(_Fields.RESOURCE_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("resource_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ResourceProperty.class)));
    tmpMap.put(_Fields.REQUEST_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("request_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RequestProperty.class)));
    tmpMap.put(_Fields.RESPONSE_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("response_property", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ResponseProperty.class)));
    tmpMap.put(_Fields.CLIENT_REQUEST_EDGE, new org.apache.thrift.meta_data.FieldMetaData("client_request_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ClientRequestEdge.class)));
    tmpMap.put(_Fields.REQUEST_RESOURCE_EDGE, new org.apache.thrift.meta_data.FieldMetaData("request_resource_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RequestResourceEdge.class)));
    tmpMap.put(_Fields.RESOURCE_RESPONSE_EDGE, new org.apache.thrift.meta_data.FieldMetaData("resource_response_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ResourceResponseEdge.class)));
    tmpMap.put(_Fields.RESPONSE_CLIENT_EDGE, new org.apache.thrift.meta_data.FieldMetaData("response_client_edge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ResponseClientEdge.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ClientDataUnit.class, metaDataMap);
  }

  public ClientDataUnit() {
  }

  public ClientDataUnit(
    ClientProperty client_property,
    ResourceProperty resource_property,
    RequestProperty request_property,
    ResponseProperty response_property,
    ClientRequestEdge client_request_edge,
    RequestResourceEdge request_resource_edge,
    ResourceResponseEdge resource_response_edge,
    ResponseClientEdge response_client_edge)
  {
    this();
    this.client_property = client_property;
    this.resource_property = resource_property;
    this.request_property = request_property;
    this.response_property = response_property;
    this.client_request_edge = client_request_edge;
    this.request_resource_edge = request_resource_edge;
    this.resource_response_edge = resource_response_edge;
    this.response_client_edge = response_client_edge;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ClientDataUnit(ClientDataUnit other) {
    if (other.isSetClient_property()) {
      this.client_property = new ClientProperty(other.client_property);
    }
    if (other.isSetResource_property()) {
      this.resource_property = new ResourceProperty(other.resource_property);
    }
    if (other.isSetRequest_property()) {
      this.request_property = new RequestProperty(other.request_property);
    }
    if (other.isSetResponse_property()) {
      this.response_property = new ResponseProperty(other.response_property);
    }
    if (other.isSetClient_request_edge()) {
      this.client_request_edge = new ClientRequestEdge(other.client_request_edge);
    }
    if (other.isSetRequest_resource_edge()) {
      this.request_resource_edge = new RequestResourceEdge(other.request_resource_edge);
    }
    if (other.isSetResource_response_edge()) {
      this.resource_response_edge = new ResourceResponseEdge(other.resource_response_edge);
    }
    if (other.isSetResponse_client_edge()) {
      this.response_client_edge = new ResponseClientEdge(other.response_client_edge);
    }
  }

  public ClientDataUnit deepCopy() {
    return new ClientDataUnit(this);
  }

  @Override
  public void clear() {
    this.client_property = null;
    this.resource_property = null;
    this.request_property = null;
    this.response_property = null;
    this.client_request_edge = null;
    this.request_resource_edge = null;
    this.resource_response_edge = null;
    this.response_client_edge = null;
  }

  public ClientProperty getClient_property() {
    return this.client_property;
  }

  public ClientDataUnit setClient_property(ClientProperty client_property) {
    this.client_property = client_property;
    return this;
  }

  public void unsetClient_property() {
    this.client_property = null;
  }

  /** Returns true if field client_property is set (has been assigned a value) and false otherwise */
  public boolean isSetClient_property() {
    return this.client_property != null;
  }

  public void setClient_propertyIsSet(boolean value) {
    if (!value) {
      this.client_property = null;
    }
  }

  public ResourceProperty getResource_property() {
    return this.resource_property;
  }

  public ClientDataUnit setResource_property(ResourceProperty resource_property) {
    this.resource_property = resource_property;
    return this;
  }

  public void unsetResource_property() {
    this.resource_property = null;
  }

  /** Returns true if field resource_property is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_property() {
    return this.resource_property != null;
  }

  public void setResource_propertyIsSet(boolean value) {
    if (!value) {
      this.resource_property = null;
    }
  }

  public RequestProperty getRequest_property() {
    return this.request_property;
  }

  public ClientDataUnit setRequest_property(RequestProperty request_property) {
    this.request_property = request_property;
    return this;
  }

  public void unsetRequest_property() {
    this.request_property = null;
  }

  /** Returns true if field request_property is set (has been assigned a value) and false otherwise */
  public boolean isSetRequest_property() {
    return this.request_property != null;
  }

  public void setRequest_propertyIsSet(boolean value) {
    if (!value) {
      this.request_property = null;
    }
  }

  public ResponseProperty getResponse_property() {
    return this.response_property;
  }

  public ClientDataUnit setResponse_property(ResponseProperty response_property) {
    this.response_property = response_property;
    return this;
  }

  public void unsetResponse_property() {
    this.response_property = null;
  }

  /** Returns true if field response_property is set (has been assigned a value) and false otherwise */
  public boolean isSetResponse_property() {
    return this.response_property != null;
  }

  public void setResponse_propertyIsSet(boolean value) {
    if (!value) {
      this.response_property = null;
    }
  }

  public ClientRequestEdge getClient_request_edge() {
    return this.client_request_edge;
  }

  public ClientDataUnit setClient_request_edge(ClientRequestEdge client_request_edge) {
    this.client_request_edge = client_request_edge;
    return this;
  }

  public void unsetClient_request_edge() {
    this.client_request_edge = null;
  }

  /** Returns true if field client_request_edge is set (has been assigned a value) and false otherwise */
  public boolean isSetClient_request_edge() {
    return this.client_request_edge != null;
  }

  public void setClient_request_edgeIsSet(boolean value) {
    if (!value) {
      this.client_request_edge = null;
    }
  }

  public RequestResourceEdge getRequest_resource_edge() {
    return this.request_resource_edge;
  }

  public ClientDataUnit setRequest_resource_edge(RequestResourceEdge request_resource_edge) {
    this.request_resource_edge = request_resource_edge;
    return this;
  }

  public void unsetRequest_resource_edge() {
    this.request_resource_edge = null;
  }

  /** Returns true if field request_resource_edge is set (has been assigned a value) and false otherwise */
  public boolean isSetRequest_resource_edge() {
    return this.request_resource_edge != null;
  }

  public void setRequest_resource_edgeIsSet(boolean value) {
    if (!value) {
      this.request_resource_edge = null;
    }
  }

  public ResourceResponseEdge getResource_response_edge() {
    return this.resource_response_edge;
  }

  public ClientDataUnit setResource_response_edge(ResourceResponseEdge resource_response_edge) {
    this.resource_response_edge = resource_response_edge;
    return this;
  }

  public void unsetResource_response_edge() {
    this.resource_response_edge = null;
  }

  /** Returns true if field resource_response_edge is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_response_edge() {
    return this.resource_response_edge != null;
  }

  public void setResource_response_edgeIsSet(boolean value) {
    if (!value) {
      this.resource_response_edge = null;
    }
  }

  public ResponseClientEdge getResponse_client_edge() {
    return this.response_client_edge;
  }

  public ClientDataUnit setResponse_client_edge(ResponseClientEdge response_client_edge) {
    this.response_client_edge = response_client_edge;
    return this;
  }

  public void unsetResponse_client_edge() {
    this.response_client_edge = null;
  }

  /** Returns true if field response_client_edge is set (has been assigned a value) and false otherwise */
  public boolean isSetResponse_client_edge() {
    return this.response_client_edge != null;
  }

  public void setResponse_client_edgeIsSet(boolean value) {
    if (!value) {
      this.response_client_edge = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CLIENT_PROPERTY:
      if (value == null) {
        unsetClient_property();
      } else {
        setClient_property((ClientProperty)value);
      }
      break;

    case RESOURCE_PROPERTY:
      if (value == null) {
        unsetResource_property();
      } else {
        setResource_property((ResourceProperty)value);
      }
      break;

    case REQUEST_PROPERTY:
      if (value == null) {
        unsetRequest_property();
      } else {
        setRequest_property((RequestProperty)value);
      }
      break;

    case RESPONSE_PROPERTY:
      if (value == null) {
        unsetResponse_property();
      } else {
        setResponse_property((ResponseProperty)value);
      }
      break;

    case CLIENT_REQUEST_EDGE:
      if (value == null) {
        unsetClient_request_edge();
      } else {
        setClient_request_edge((ClientRequestEdge)value);
      }
      break;

    case REQUEST_RESOURCE_EDGE:
      if (value == null) {
        unsetRequest_resource_edge();
      } else {
        setRequest_resource_edge((RequestResourceEdge)value);
      }
      break;

    case RESOURCE_RESPONSE_EDGE:
      if (value == null) {
        unsetResource_response_edge();
      } else {
        setResource_response_edge((ResourceResponseEdge)value);
      }
      break;

    case RESPONSE_CLIENT_EDGE:
      if (value == null) {
        unsetResponse_client_edge();
      } else {
        setResponse_client_edge((ResponseClientEdge)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CLIENT_PROPERTY:
      return getClient_property();

    case RESOURCE_PROPERTY:
      return getResource_property();

    case REQUEST_PROPERTY:
      return getRequest_property();

    case RESPONSE_PROPERTY:
      return getResponse_property();

    case CLIENT_REQUEST_EDGE:
      return getClient_request_edge();

    case REQUEST_RESOURCE_EDGE:
      return getRequest_resource_edge();

    case RESOURCE_RESPONSE_EDGE:
      return getResource_response_edge();

    case RESPONSE_CLIENT_EDGE:
      return getResponse_client_edge();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CLIENT_PROPERTY:
      return isSetClient_property();
    case RESOURCE_PROPERTY:
      return isSetResource_property();
    case REQUEST_PROPERTY:
      return isSetRequest_property();
    case RESPONSE_PROPERTY:
      return isSetResponse_property();
    case CLIENT_REQUEST_EDGE:
      return isSetClient_request_edge();
    case REQUEST_RESOURCE_EDGE:
      return isSetRequest_resource_edge();
    case RESOURCE_RESPONSE_EDGE:
      return isSetResource_response_edge();
    case RESPONSE_CLIENT_EDGE:
      return isSetResponse_client_edge();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ClientDataUnit)
      return this.equals((ClientDataUnit)that);
    return false;
  }

  public boolean equals(ClientDataUnit that) {
    if (that == null)
      return false;

    boolean this_present_client_property = true && this.isSetClient_property();
    boolean that_present_client_property = true && that.isSetClient_property();
    if (this_present_client_property || that_present_client_property) {
      if (!(this_present_client_property && that_present_client_property))
        return false;
      if (!this.client_property.equals(that.client_property))
        return false;
    }

    boolean this_present_resource_property = true && this.isSetResource_property();
    boolean that_present_resource_property = true && that.isSetResource_property();
    if (this_present_resource_property || that_present_resource_property) {
      if (!(this_present_resource_property && that_present_resource_property))
        return false;
      if (!this.resource_property.equals(that.resource_property))
        return false;
    }

    boolean this_present_request_property = true && this.isSetRequest_property();
    boolean that_present_request_property = true && that.isSetRequest_property();
    if (this_present_request_property || that_present_request_property) {
      if (!(this_present_request_property && that_present_request_property))
        return false;
      if (!this.request_property.equals(that.request_property))
        return false;
    }

    boolean this_present_response_property = true && this.isSetResponse_property();
    boolean that_present_response_property = true && that.isSetResponse_property();
    if (this_present_response_property || that_present_response_property) {
      if (!(this_present_response_property && that_present_response_property))
        return false;
      if (!this.response_property.equals(that.response_property))
        return false;
    }

    boolean this_present_client_request_edge = true && this.isSetClient_request_edge();
    boolean that_present_client_request_edge = true && that.isSetClient_request_edge();
    if (this_present_client_request_edge || that_present_client_request_edge) {
      if (!(this_present_client_request_edge && that_present_client_request_edge))
        return false;
      if (!this.client_request_edge.equals(that.client_request_edge))
        return false;
    }

    boolean this_present_request_resource_edge = true && this.isSetRequest_resource_edge();
    boolean that_present_request_resource_edge = true && that.isSetRequest_resource_edge();
    if (this_present_request_resource_edge || that_present_request_resource_edge) {
      if (!(this_present_request_resource_edge && that_present_request_resource_edge))
        return false;
      if (!this.request_resource_edge.equals(that.request_resource_edge))
        return false;
    }

    boolean this_present_resource_response_edge = true && this.isSetResource_response_edge();
    boolean that_present_resource_response_edge = true && that.isSetResource_response_edge();
    if (this_present_resource_response_edge || that_present_resource_response_edge) {
      if (!(this_present_resource_response_edge && that_present_resource_response_edge))
        return false;
      if (!this.resource_response_edge.equals(that.resource_response_edge))
        return false;
    }

    boolean this_present_response_client_edge = true && this.isSetResponse_client_edge();
    boolean that_present_response_client_edge = true && that.isSetResponse_client_edge();
    if (this_present_response_client_edge || that_present_response_client_edge) {
      if (!(this_present_response_client_edge && that_present_response_client_edge))
        return false;
      if (!this.response_client_edge.equals(that.response_client_edge))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ClientDataUnit other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetClient_property()).compareTo(other.isSetClient_property());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClient_property()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.client_property, other.client_property);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResource_property()).compareTo(other.isSetResource_property());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_property()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_property, other.resource_property);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequest_property()).compareTo(other.isSetRequest_property());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequest_property()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.request_property, other.request_property);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponse_property()).compareTo(other.isSetResponse_property());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponse_property()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.response_property, other.response_property);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClient_request_edge()).compareTo(other.isSetClient_request_edge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClient_request_edge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.client_request_edge, other.client_request_edge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequest_resource_edge()).compareTo(other.isSetRequest_resource_edge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequest_resource_edge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.request_resource_edge, other.request_resource_edge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResource_response_edge()).compareTo(other.isSetResource_response_edge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_response_edge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_response_edge, other.resource_response_edge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponse_client_edge()).compareTo(other.isSetResponse_client_edge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponse_client_edge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.response_client_edge, other.response_client_edge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ClientDataUnit(");
    boolean first = true;

    sb.append("client_property:");
    if (this.client_property == null) {
      sb.append("null");
    } else {
      sb.append(this.client_property);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_property:");
    if (this.resource_property == null) {
      sb.append("null");
    } else {
      sb.append(this.resource_property);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("request_property:");
    if (this.request_property == null) {
      sb.append("null");
    } else {
      sb.append(this.request_property);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("response_property:");
    if (this.response_property == null) {
      sb.append("null");
    } else {
      sb.append(this.response_property);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("client_request_edge:");
    if (this.client_request_edge == null) {
      sb.append("null");
    } else {
      sb.append(this.client_request_edge);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("request_resource_edge:");
    if (this.request_resource_edge == null) {
      sb.append("null");
    } else {
      sb.append(this.request_resource_edge);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_response_edge:");
    if (this.resource_response_edge == null) {
      sb.append("null");
    } else {
      sb.append(this.resource_response_edge);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("response_client_edge:");
    if (this.response_client_edge == null) {
      sb.append("null");
    } else {
      sb.append(this.response_client_edge);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (client_property != null) {
      client_property.validate();
    }
    if (resource_property != null) {
      resource_property.validate();
    }
    if (request_property != null) {
      request_property.validate();
    }
    if (response_property != null) {
      response_property.validate();
    }
    if (client_request_edge != null) {
      client_request_edge.validate();
    }
    if (request_resource_edge != null) {
      request_resource_edge.validate();
    }
    if (resource_response_edge != null) {
      resource_response_edge.validate();
    }
    if (response_client_edge != null) {
      response_client_edge.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ClientDataUnitStandardSchemeFactory implements SchemeFactory {
    public ClientDataUnitStandardScheme getScheme() {
      return new ClientDataUnitStandardScheme();
    }
  }

  private static class ClientDataUnitStandardScheme extends StandardScheme<ClientDataUnit> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ClientDataUnit struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLIENT_PROPERTY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.client_property = new ClientProperty();
              struct.client_property.read(iprot);
              struct.setClient_propertyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RESOURCE_PROPERTY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.resource_property = new ResourceProperty();
              struct.resource_property.read(iprot);
              struct.setResource_propertyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REQUEST_PROPERTY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.request_property = new RequestProperty();
              struct.request_property.read(iprot);
              struct.setRequest_propertyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RESPONSE_PROPERTY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.response_property = new ResponseProperty();
              struct.response_property.read(iprot);
              struct.setResponse_propertyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CLIENT_REQUEST_EDGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.client_request_edge = new ClientRequestEdge();
              struct.client_request_edge.read(iprot);
              struct.setClient_request_edgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // REQUEST_RESOURCE_EDGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.request_resource_edge = new RequestResourceEdge();
              struct.request_resource_edge.read(iprot);
              struct.setRequest_resource_edgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RESOURCE_RESPONSE_EDGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.resource_response_edge = new ResourceResponseEdge();
              struct.resource_response_edge.read(iprot);
              struct.setResource_response_edgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RESPONSE_CLIENT_EDGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.response_client_edge = new ResponseClientEdge();
              struct.response_client_edge.read(iprot);
              struct.setResponse_client_edgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ClientDataUnit struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.client_property != null) {
        oprot.writeFieldBegin(CLIENT_PROPERTY_FIELD_DESC);
        struct.client_property.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.resource_property != null) {
        oprot.writeFieldBegin(RESOURCE_PROPERTY_FIELD_DESC);
        struct.resource_property.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.request_property != null) {
        oprot.writeFieldBegin(REQUEST_PROPERTY_FIELD_DESC);
        struct.request_property.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.response_property != null) {
        oprot.writeFieldBegin(RESPONSE_PROPERTY_FIELD_DESC);
        struct.response_property.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.client_request_edge != null) {
        oprot.writeFieldBegin(CLIENT_REQUEST_EDGE_FIELD_DESC);
        struct.client_request_edge.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.request_resource_edge != null) {
        oprot.writeFieldBegin(REQUEST_RESOURCE_EDGE_FIELD_DESC);
        struct.request_resource_edge.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.resource_response_edge != null) {
        oprot.writeFieldBegin(RESOURCE_RESPONSE_EDGE_FIELD_DESC);
        struct.resource_response_edge.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.response_client_edge != null) {
        oprot.writeFieldBegin(RESPONSE_CLIENT_EDGE_FIELD_DESC);
        struct.response_client_edge.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ClientDataUnitTupleSchemeFactory implements SchemeFactory {
    public ClientDataUnitTupleScheme getScheme() {
      return new ClientDataUnitTupleScheme();
    }
  }

  private static class ClientDataUnitTupleScheme extends TupleScheme<ClientDataUnit> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ClientDataUnit struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetClient_property()) {
        optionals.set(0);
      }
      if (struct.isSetResource_property()) {
        optionals.set(1);
      }
      if (struct.isSetRequest_property()) {
        optionals.set(2);
      }
      if (struct.isSetResponse_property()) {
        optionals.set(3);
      }
      if (struct.isSetClient_request_edge()) {
        optionals.set(4);
      }
      if (struct.isSetRequest_resource_edge()) {
        optionals.set(5);
      }
      if (struct.isSetResource_response_edge()) {
        optionals.set(6);
      }
      if (struct.isSetResponse_client_edge()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetClient_property()) {
        struct.client_property.write(oprot);
      }
      if (struct.isSetResource_property()) {
        struct.resource_property.write(oprot);
      }
      if (struct.isSetRequest_property()) {
        struct.request_property.write(oprot);
      }
      if (struct.isSetResponse_property()) {
        struct.response_property.write(oprot);
      }
      if (struct.isSetClient_request_edge()) {
        struct.client_request_edge.write(oprot);
      }
      if (struct.isSetRequest_resource_edge()) {
        struct.request_resource_edge.write(oprot);
      }
      if (struct.isSetResource_response_edge()) {
        struct.resource_response_edge.write(oprot);
      }
      if (struct.isSetResponse_client_edge()) {
        struct.response_client_edge.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ClientDataUnit struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.client_property = new ClientProperty();
        struct.client_property.read(iprot);
        struct.setClient_propertyIsSet(true);
      }
      if (incoming.get(1)) {
        struct.resource_property = new ResourceProperty();
        struct.resource_property.read(iprot);
        struct.setResource_propertyIsSet(true);
      }
      if (incoming.get(2)) {
        struct.request_property = new RequestProperty();
        struct.request_property.read(iprot);
        struct.setRequest_propertyIsSet(true);
      }
      if (incoming.get(3)) {
        struct.response_property = new ResponseProperty();
        struct.response_property.read(iprot);
        struct.setResponse_propertyIsSet(true);
      }
      if (incoming.get(4)) {
        struct.client_request_edge = new ClientRequestEdge();
        struct.client_request_edge.read(iprot);
        struct.setClient_request_edgeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.request_resource_edge = new RequestResourceEdge();
        struct.request_resource_edge.read(iprot);
        struct.setRequest_resource_edgeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.resource_response_edge = new ResourceResponseEdge();
        struct.resource_response_edge.read(iprot);
        struct.setResource_response_edgeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.response_client_edge = new ResponseClientEdge();
        struct.response_client_edge.read(iprot);
        struct.setResponse_client_edgeIsSet(true);
      }
    }
  }

}

